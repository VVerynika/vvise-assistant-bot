import os
import time
import signal
import sys
import threading
from datetime import datetime
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
from problem_analyzer import ProblemAnalyzer
from google_sheets_manager import GoogleSheetsManager
from slack_integration import SlackIntegration
from clickup_integration import ClickUpIntegration
from telegram_bot import TelegramBot

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_event = threading.Event()

def handle_signal(signum, frame):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è"""
    print(f"\nüì° –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –∑–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
    stop_event.set()

def setup_signal_handlers():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤"""
    signal.signal(signal.SIGTERM, handle_signal)
    signal.signal(signal.SIGINT, handle_signal)

def initialize_components():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã —Å–∏—Å—Ç–µ–º—ã"""
    print("üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∞–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–±–ª–µ–º
    analyzer = ProblemAnalyzer()
    print("‚úÖ –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–±–ª–µ–º –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Google Sheets –º–µ–Ω–µ–¥–∂–µ—Ä
    sheets_manager = GoogleSheetsManager()
    if sheets_manager.sheet:
        print("‚úÖ Google Sheets –ø–æ–¥–∫–ª—é—á–µ–Ω")
    else:
        print("‚ö†Ô∏è Google Sheets –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏
    slack_integration = SlackIntegration(analyzer=analyzer, sheets_manager=sheets_manager)
    clickup_integration = ClickUpIntegration(analyzer=analyzer, sheets_manager=sheets_manager)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Telegram –±–æ—Ç–∞
    telegram_bot = TelegramBot(
        analyzer=analyzer,
        sheets_manager=sheets_manager,
        slack_integration=slack_integration,
        clickup_integration=clickup_integration
    )
    
    return analyzer, sheets_manager, slack_integration, clickup_integration, telegram_bot

def run_component(component, component_name, stop_event):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        print(f"üîÑ –ó–∞–ø—É—Å–∫ {component_name}...")
        if hasattr(component, 'run'):
            component.run()
        elif hasattr(component, 'run_polling'):
            component.run_polling()
        else:
            print(f"‚ö†Ô∏è –ö–æ–º–ø–æ–Ω–µ–Ω—Ç {component_name} –Ω–µ –∏–º–µ–µ—Ç –º–µ—Ç–æ–¥–∞ run")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ {component_name}: {e}")
    finally:
        print(f"üõë {component_name} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("ü§ñ –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞-–ø–æ–º–æ—â–Ω–∏–∫–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ –ø—Ä–æ–±–ª–µ–º")
    print(f"‚è∞ –í—Ä–µ–º—è –∑–∞–ø—É—Å–∫–∞: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
    setup_signal_handlers()
    
    try:
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        analyzer, sheets_manager, slack_integration, clickup_integration, telegram_bot = initialize_components()
        
        print("\nüìã –°—Ç–∞—Ç—É—Å –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤:")
        print(f"   üîç –ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä –ø—Ä–æ–±–ª–µ–º: {'‚úÖ' if analyzer else '‚ùå'}")
        print(f"   üìä Google Sheets: {'‚úÖ' if sheets_manager and sheets_manager.sheet else '‚ùå'}")
        print(f"   üí¨ Slack: {'‚úÖ' if slack_integration and slack_integration.token else '‚ùå'}")
        print(f"   üìã ClickUp: {'‚úÖ' if clickup_integration and clickup_integration.token else '‚ùå'}")
        print(f"   ü§ñ Telegram: {'‚úÖ' if telegram_bot and telegram_bot.token else '‚ùå'}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
        threads = []
        
        # Telegram –±–æ—Ç
        if telegram_bot and telegram_bot.token:
            t_telegram = threading.Thread(
                target=run_component,
                args=(telegram_bot, "Telegram –±–æ—Ç", stop_event),
                daemon=True
            )
            t_telegram.start()
            threads.append(t_telegram)
            print("‚úÖ Telegram –±–æ—Ç –∑–∞–ø—É—â–µ–Ω")
        
        # Slack –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
        if slack_integration and slack_integration.token:
            t_slack = threading.Thread(
                target=run_component,
                args=(slack_integration, "Slack –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", stop_event),
                daemon=True
            )
            t_slack.start()
            threads.append(t_slack)
            print("‚úÖ Slack –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞")
        
        # ClickUp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
        if clickup_integration and clickup_integration.token:
            t_clickup = threading.Thread(
                target=run_component,
                args=(clickup_integration, "ClickUp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è", stop_event),
                daemon=True
            )
            t_clickup.start()
            threads.append(t_clickup)
            print("‚úÖ ClickUp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –∑–∞–ø—É—â–µ–Ω–∞")
        
        print(f"\nüöÄ –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø—É—â–µ–Ω–∞. –ó–∞–ø—É—â–µ–Ω–æ –ø–æ—Ç–æ–∫–æ–≤: {len(threads)}")
        print("üí° –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª
        while not stop_event.is_set():
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Ç–æ–∫–æ–≤
                active_threads = [t for t in threads if t.is_alive()]
                if len(active_threads) < len(threads):
                    print(f"‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ –ø–æ—Ç–æ–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –ê–∫—Ç–∏–≤–Ω—ã—Ö: {len(active_threads)}/{len(threads)}")
                
                # –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥
                if sheets_manager and analyzer and not stop_event.is_set():
                    try:
                        all_problems = analyzer.get_problems_by_status()
                        if all_problems:
                            sheets_manager.sync_problems_to_sheets(all_problems)
                            sheets_manager.update_dashboard(analyzer)
                            print(f"üìä –î–∞—à–±–æ—Ä–¥ –æ–±–Ω–æ–≤–ª–µ–Ω. –ü—Ä–æ–±–ª–µ–º: {len(all_problems)}")
                    except Exception as e:
                        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞: {e}")
                
                # –ñ–¥–µ–º
                time.sleep(300)  # 5 –º–∏–Ω—É—Ç
                
            except KeyboardInterrupt:
                print("\nüõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏...")
                stop_event.set()
                break
            except Exception as e:
                print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                time.sleep(60)
        
        print("\nüîÑ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º—ã...")
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤
        for thread in threads:
            if thread.is_alive():
                thread.join(timeout=10)
                if thread.is_alive():
                    print(f"‚ö†Ô∏è –ü–æ—Ç–æ–∫ {thread.name} –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
        
        print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
    except Exception as e:
        print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
