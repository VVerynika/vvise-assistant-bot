#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∏—Å—Ç–µ–º—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ
"""

import os
import sys
import time
import signal
import logging
import threading
from datetime import datetime
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
def setup_logging():
    """–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ"""
    log_dir = Path("/workspace/logs")
    log_dir.mkdir(exist_ok=True)
    
    # –û—Å–Ω–æ–≤–Ω–æ–π –ª–æ–≥ —Ñ–∞–π–ª
    main_log = log_dir / "main.log"
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatter = logging.Formatter(
        '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    )
    
    # –§–∞–π–ª–æ–≤—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    file_handler = logging.FileHandler(main_log, encoding='utf-8')
    file_handler.setLevel(logging.INFO)
    file_handler.setFormatter(formatter)
    
    # –ö–æ–Ω—Å–æ–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    console_handler = logging.StreamHandler(sys.stdout)
    console_handler.setLevel(logging.INFO)
    console_handler.setFormatter(formatter)
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ—Ä–Ω–µ–≤–æ–≥–æ –ª–æ–≥–≥–µ—Ä–∞
    root_logger = logging.getLogger()
    root_logger.setLevel(logging.INFO)
    root_logger.addHandler(file_handler)
    root_logger.addHandler(console_handler)
    
    return root_logger

def run_component(component_name: str, component_func, logger):
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ"""
    try:
        logger.info(f"–ó–∞–ø—É—Å–∫ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞: {component_name}")
        component_func()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ {component_name}: {e}")
        logger.exception("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    logger = setup_logging()
    logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∏—Å—Ç–µ–º—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ...")
    
    try:
        # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏
        from problem_analyzer import ProblemAnalyzer
        from google_sheets_manager import GoogleSheetsManager
        from slack_integration import SlackIntegration
        from clickup_integration import ClickUpIntegration
        from telegram_bot import TelegramBot
        
        logger.info("‚úÖ –í—Å–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã")
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
        logger.info("üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤...")
        
        analyzer = ProblemAnalyzer()
        logger.info("‚úÖ ProblemAnalyzer –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        sheets_manager = GoogleSheetsManager()
        logger.info("‚úÖ GoogleSheetsManager –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        slack_integration = SlackIntegration(analyzer=analyzer, sheets_manager=sheets_manager)
        logger.info("‚úÖ SlackIntegration –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        clickup_integration = ClickUpIntegration(analyzer=analyzer, sheets_manager=sheets_manager)
        logger.info("‚úÖ ClickUpIntegration –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        telegram_bot = TelegramBot(
            analyzer=analyzer,
            sheets_manager=sheets_manager,
            slack_integration=slack_integration,
            clickup_integration=clickup_integration
        )
        logger.info("‚úÖ TelegramBot –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
        
        # –§–ª–∞–≥ –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        stop_event = threading.Event()
        
        def signal_handler(signum, frame):
            """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∏–≥–Ω–∞–ª–æ–≤ –¥–ª—è graceful shutdown"""
            logger.info(f"–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª {signum}, –Ω–∞—á–∏–Ω–∞–µ–º –æ—Å—Ç–∞–Ω–æ–≤–∫—É...")
            stop_event.set()
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤
        signal.signal(signal.SIGTERM, signal_handler)
        signal.signal(signal.SIGINT, signal_handler)
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –≤ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ—Ç–æ–∫–∞—Ö
        threads = []
        
        # Slack –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
        slack_thread = threading.Thread(
            target=run_component,
            args=("Slack", slack_integration.run, logger),
            daemon=True
        )
        threads.append(slack_thread)
        slack_thread.start()
        
        # ClickUp –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
        clickup_thread = threading.Thread(
            target=run_component,
            args=("ClickUp", clickup_integration.run, logger),
            daemon=True
        )
        threads.append(clickup_thread)
        clickup_thread.start()
        
        # Telegram –±–æ—Ç
        telegram_thread = threading.Thread(
            target=run_component,
            args=("Telegram", telegram_bot.run_polling, logger),
            daemon=True
        )
        threads.append(telegram_thread)
        telegram_thread.start()
        
        logger.info("‚úÖ –í—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∑–∞–ø—É—â–µ–Ω—ã –≤ —Ñ–æ–Ω–æ–≤–æ–º —Ä–µ–∂–∏–º–µ")
        
        # –û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        while not stop_event.is_set():
            try:
                # –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞—à–±–æ—Ä–¥ –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
                time.sleep(300)
                
                if not stop_event.is_set():
                    logger.info("üìä –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞—à–±–æ—Ä–¥–∞...")
                    try:
                        sheets_manager.update_dashboard(analyzer)
                        logger.info("‚úÖ –î–∞—à–±–æ—Ä–¥ –æ–±–Ω–æ–≤–ª–µ–Ω")
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–∞—à–±–æ—Ä–¥–∞: {e}")
                
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")
                time.sleep(60)
        
        logger.info("üõë –ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏, –æ–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤...")
        
        # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –ø–æ—Ç–æ–∫–æ–≤
        for thread in threads:
            thread.join(timeout=30)
            if thread.is_alive():
                logger.warning(f"–ü–æ—Ç–æ–∫ {thread.name} –Ω–µ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –≤ —Ç–µ—á–µ–Ω–∏–µ 30 —Å–µ–∫—É–Ω–¥")
        
        logger.info("‚úÖ –°–∏—Å—Ç–µ–º–∞ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
        
    except ImportError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ –º–æ–¥—É–ª—è: {e}")
        logger.error("–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã")
        sys.exit(1)
        
    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")
        logger.exception("–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:")
        sys.exit(1)

if __name__ == "__main__":
    main()